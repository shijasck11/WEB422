{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\SEM 5\\\\WEB 422\\\\Assignment 3\\\\my-app\\\\src\\\\Restaurant.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { Card, CardDeck } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Restaurant(props) {\n  _s();\n\n  const [restaurant, setRestaurant] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    fetch(`https://web422ass1.herokuapp.com/api/restaurants/${props.id}`).then(res => res.json()).then(result => {\n      console.log(\"result\" + result);\n      setLoading(false);\n\n      if (result.hasOwnProperty(\"_id\")) {\n        alert('test');\n        setRestaurant(result);\n      } else {\n        setRestaurant(null);\n      }\n    });\n  }, [props.id]);\n\n  if (loading === true) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Loading Restaurant Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  } else if (!restaurant) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Unable to find Restaurant with id: \", restaurant._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [restaurant.name, /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [restaurant.address.building, \" \", restaurant.address.street]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        style: {\n          \"height\": \"400px\"\n        },\n        center: [restaurant.address.coord[1], restaurant.address.coord[0]],\n        zoom: 13,\n        scrollWheelZoom: false,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [restaurant.address.coord[1], restaurant.address.coord[0]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CardDeck, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Ratings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"Grade: \", restaurant.grades[0].grade]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: [\"Completed: \", restaurant.grades[0].date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"Grade: \", restaurant.grades[1].grade]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: [\"Completed: \", restaurant.grades[1].date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"Grade: \", restaurant.grades[2].grade]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: [\"Completed: \", restaurant.grades[2].date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 14\n    }, this);\n  }\n}\n\n_s(Restaurant, \"f/OEzMGT6njGZKwZ1cEkZPAOp0k=\");\n\n_c = Restaurant;\nexport default Restaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"sources":["D:/Study/SEM 5/WEB 422/Assignment 3/my-app/src/Restaurant.js"],"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Card","CardDeck","Restaurant","props","restaurant","setRestaurant","loading","setLoading","fetch","id","then","res","json","result","console","log","hasOwnProperty","alert","_id","name","address","building","street","coord","grades","grade","date"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\r\nimport {Card, CardDeck} from 'react-bootstrap';\r\nfunction Restaurant(props){\r\n    const [restaurant, setRestaurant] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetch(`https://web422ass1.herokuapp.com/api/restaurants/${props.id}`)\r\n        .then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(\"result\" + result);\r\n            setLoading(false);\r\n            if(result.hasOwnProperty(\"_id\")){\r\n                alert('test');\r\n               setRestaurant(result);\r\n            }else{\r\n                setRestaurant(null);\r\n            }\r\n        })\r\n     }, [props.id]);\r\n\r\n    if(loading===true){\r\n        return(\r\n            <Card>\r\n        <Card.Header>\r\n            <Card.Text>\r\n                Loading Restaurant Data...\r\n            </Card.Text>\r\n        </Card.Header>\r\n    </Card>\r\n        )\r\n        \r\n    }\r\n    else if(!restaurant){\r\n        return(\r\n            <Card>\r\n        <Card.Header>\r\n            <Card.Text>\r\n               Unable to find Restaurant with id: {restaurant._id}\r\n            </Card.Text>\r\n        </Card.Header>\r\n    </Card>\r\n        )\r\n        \r\n    }\r\n    else{\r\n        return(\r\n             <div>\r\n                 <Card>\r\n                     <Card.Header>\r\n                      {restaurant.name} \r\n                         <Card.Text>\r\n                    {restaurant.address.building} {restaurant.address.street} \r\n                         </Card.Text>\r\n                     </Card.Header>\r\n                 </Card>\r\n    \r\n                <MapContainer style={{\"height\": \"400px\"}} center={[restaurant.address.coord[1], restaurant.address.coord[0]]} zoom={13} scrollWheelZoom={false}>\r\n                     <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                     <Marker position={[ restaurant.address.coord[1], restaurant.address.coord[0]]}></Marker>\r\n                 </MapContainer>\r\n    <br></br>\r\n    <br></br>\r\n <CardDeck>\r\n     <h1>Ratings</h1>\r\n     <br></br>\r\n  <Card>\r\n    <Card.Body>\r\n      <Card.Title>Grade: {restaurant.grades[0].grade}</Card.Title>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n            Completed: {restaurant.grades[0].date}\r\n    </Card.Footer>\r\n  </Card>\r\n  <Card>\r\n    <Card.Body>\r\n      <Card.Title>Grade: {restaurant.grades[1].grade}</Card.Title>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n            Completed: {restaurant.grades[1].date}\r\n    </Card.Footer>\r\n  </Card>\r\n  <Card>\r\n    <Card.Body>\r\n      <Card.Title>Grade: {restaurant.grades[2].grade}</Card.Title>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n            Completed: {restaurant.grades[2].date}\r\n    </Card.Footer>\r\n  </Card>\r\n</CardDeck>\r\n\r\n             </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Restaurant;"]},"metadata":{},"sourceType":"module"}