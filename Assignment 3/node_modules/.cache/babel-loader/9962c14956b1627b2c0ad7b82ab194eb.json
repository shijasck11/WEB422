{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\SEM 5\\\\WEB 422\\\\Assignment 3\\\\my-app\\\\src\\\\Restaurants.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport { Card, Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Restaurants(props) {\n  _s();\n\n  const [restaurants, setRestaurants] = useState(null);\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    setRestaurants({\n      address: null,\n      _id: \"5eb3d668b31de5d588f4299a\",\n      borough: \"Bronx\",\n      cuisine: \"American\",\n      grades: null,\n      name: \"Yankee Tavern\",\n      restaurant_id: \"40365499\"\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`https://web422ass1.herokuapp.com/api/restaurants?page=${props.page}&perPage=10&borough=${props.query.searchString}`).then(res => res.json()).then(result => {\n      setRestaurants(result);\n    });\n  }, [props.page, props.query.searchString]);\n\n  function genRestaurant() {\n    restaurants.map(rest => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        \"data-id\": rest._id,\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", rest.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", rest.address.building, \" \", rest.address.street, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", rest.borough, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", rest.cuisine, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  const previousPage = () => {\n    if (page > 0) {\n      setPage(page - 1);\n    }\n\n    const nextPage = () => {\n      setPage(page + 1);\n    };\n  };\n\n  if (!restaurants) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [\"Restaurant List\", /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"Full list of restaurants. Optionally sorted by borough\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Borough\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cuisine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Restaurants, \"bA3gYjtDDntNCEKm5pxqoRyIOqk=\");\n\n_c = Restaurants;\nexport default Restaurants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurants\");","map":{"version":3,"sources":["D:/Study/SEM 5/WEB 422/Assignment 3/my-app/src/Restaurants.js"],"names":["React","useState","useEffect","queryString","Card","Table","Restaurants","props","restaurants","setRestaurants","page","setPage","address","_id","borough","cuisine","grades","name","restaurant_id","fetch","query","searchString","then","res","json","result","genRestaurant","map","rest","building","street","previousPage","nextPage"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport queryString from 'query-string';\r\nimport {Card, Table} from 'react-bootstrap';\r\n\r\nfunction Restaurants(props){\r\n    const [restaurants, setRestaurants] = useState(null);\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        setRestaurants({\r\n            address: null,\r\n            _id: \"5eb3d668b31de5d588f4299a\",\r\n            borough: \"Bronx\",\r\n            cuisine: \"American\",\r\n            grades: null,\r\n            name: \"Yankee Tavern\",\r\n            restaurant_id:\"40365499\"\r\n        })\r\n    }, []);\r\n\r\n\r\n     useEffect(() => {\r\n        fetch(`https://web422ass1.herokuapp.com/api/restaurants?page=${props.page}&perPage=10&borough=${props.query.searchString}`)\r\n        .then(res=>res.json())\r\n        .then(result =>{\r\n            setRestaurants(result);\r\n        })\r\n     }, [props.page, props.query.searchString ]);\r\nfunction genRestaurant(){\r\n    \r\n        restaurants.map((rest) => {\r\n            return(\r\n                <tr data-id={rest._id} >\r\n                <td> {rest.name} </td>\r\n                <td> {rest.address.building} {rest.address.street} </td>\r\n                <td> {rest.borough} </td>\r\n                <td> {rest.cuisine} </td>\r\n            </tr>\r\n            )}\r\n    )\r\n}\r\n\r\n     const previousPage = ()=>{\r\n         if(page>0){\r\n             setPage(page-1)\r\n         }\r\n     const nextPage = ()=>{\r\n         setPage(page+1);\r\n        }\r\n        \r\n     }\r\n     if (!restaurants){\r\n        return null\r\n    }\r\n    else{\r\n    return (\r\n        \r\n            <div>\r\n        <Card>\r\n        <Card.Header>\r\n          Restaurant List\r\n          <Card.Text>\r\n            Full list of restaurants. Optionally sorted by borough\r\n          </Card.Text>\r\n          </Card.Header>\r\n      </Card>\r\n\r\n<Table striped bordered hover>\r\n<thead>\r\n  <tr>\r\n    <th>Name</th>\r\n    <th>Address</th>\r\n    <th>Borough</th>\r\n    <th>Cuisine</th>\r\n  </tr>\r\n</thead>\r\n<tbody>\r\n\r\n</tbody>\r\n</Table>\r\n\r\n</div>\r\n        \r\n    )\r\n}\r\n}\r\n\r\nexport default Restaurants;\r\n"]},"metadata":{},"sourceType":"module"}