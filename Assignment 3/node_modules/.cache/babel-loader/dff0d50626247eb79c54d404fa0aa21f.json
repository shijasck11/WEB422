{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\SEM 5\\\\WEB 422\\\\Assignment 3\\\\my-app\\\\src\\\\Restaurants.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport { Card, Table, Pagination } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Restaurants(props) {\n  _s();\n\n  const [restaurants, setRestaurants] = useState(null);\n  const [page, setPage] = useState(1); // useEffect(() => {\n  //     setRestaurants({\n  //         address: null,\n  //         _id: \"5eb3d668b31de5d588f4299a\",\n  //         borough: \"Bronx\",\n  //         cuisine: \"American\",\n  //         grades: null,\n  //         name: \"Yankee Tavern\",\n  //         restaurant_id:\"40365499\"\n  //     })\n  // }, []);\n\n  useEffect(() => {\n    queryString.parse(props.query);\n    fetch(`https://web422ass1.herokuapp.com/api/restaurants?page=${props.page}&perPage=10&borough=${props.query.searchString}`).then(res => res.json()).then(result => {\n      alert('test');\n      setRestaurants(result);\n    });\n  }, [props.page, props.query]);\n\n  function genRestaurant() {\n    restaurants.map(rest => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        \"data-id\": rest._id,\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", rest.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", rest.address.building, \" \", rest.address.street, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", rest.borough, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", rest.cuisine, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  const previousPage = () => {\n    if (page > 0) {\n      setPage(page - 1);\n    }\n  };\n\n  const nextPage = () => {\n    setPage(page + 1);\n  };\n\n  if (!restaurants) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Loading Restaurants...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  } else if (restaurants == null) {\n    /*#__PURE__*/\n    _jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"No Restaurants Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [\"Restaurant List\", /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"Full list of restaurants. Optionally sorted by borough\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Borough\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cuisine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n          onClick: previousPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          children: page\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n          onClick: nextPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Restaurants, \"uvyn9gTi1e5tVLaHhIDv/SD5b1g=\");\n\n_c = Restaurants;\nexport default Restaurants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurants\");","map":{"version":3,"sources":["D:/Study/SEM 5/WEB 422/Assignment 3/my-app/src/Restaurants.js"],"names":["React","useState","useEffect","queryString","Card","Table","Pagination","Restaurants","props","restaurants","setRestaurants","page","setPage","parse","query","fetch","searchString","then","res","json","result","alert","genRestaurant","map","rest","_id","name","address","building","street","borough","cuisine","previousPage","nextPage"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport queryString from 'query-string';\r\nimport {Card, Table, Pagination} from 'react-bootstrap';\r\n\r\nfunction Restaurants(props){\r\n    const [restaurants, setRestaurants] = useState(null);\r\n    const [page, setPage] = useState(1);\r\n\r\n    // useEffect(() => {\r\n    //     setRestaurants({\r\n    //         address: null,\r\n    //         _id: \"5eb3d668b31de5d588f4299a\",\r\n    //         borough: \"Bronx\",\r\n    //         cuisine: \"American\",\r\n    //         grades: null,\r\n    //         name: \"Yankee Tavern\",\r\n    //         restaurant_id:\"40365499\"\r\n    //     })\r\n    // }, []);\r\n\r\n\r\n     useEffect(() => {\r\n        queryString.parse(props.query)\r\n        fetch(`https://web422ass1.herokuapp.com/api/restaurants?page=${props.page}&perPage=10&borough=${props.query.searchString}`)\r\n        .then(res=>res.json())\r\n        .then(result =>{\r\n            alert('test');\r\n            setRestaurants(result);\r\n        })\r\n     }, [props.page, props.query]);\r\nfunction genRestaurant(){\r\n    \r\n        restaurants.map((rest) => {\r\n            return(\r\n                <tr data-id={rest._id} >\r\n                <td> {rest.name} </td>\r\n                <td> {rest.address.building} {rest.address.street} </td>\r\n                <td> {rest.borough} </td>\r\n                <td> {rest.cuisine} </td>\r\n            </tr>\r\n            )}\r\n    )\r\n}\r\n\r\n     const previousPage = ()=>{\r\n         if(page>0){\r\n             setPage(page-1);\r\n         }\r\n };\r\n\r\n const nextPage = ()=>{\r\n    setPage(page+1);\r\n}\r\n     if (!restaurants){\r\n        return (\r\n            <Card>\r\n                <Card.Header>\r\n                    <Card.Text>\r\n                        Loading Restaurants...\r\n                    </Card.Text>\r\n                </Card.Header>\r\n            </Card>\r\n        )\r\n    }\r\n    else if(restaurants == null){\r\n        <Card>\r\n                <Card.Header>\r\n                    <Card.Text>\r\n                        No Restaurants Found\r\n                    </Card.Text>\r\n                </Card.Header>\r\n            </Card>\r\n    }\r\n    else {\r\n    return (\r\n        \r\n            <div>\r\n        \r\n        <Card>\r\n        <Card.Header>\r\n          Restaurant List\r\n          <Card.Text>\r\n            Full list of restaurants. Optionally sorted by borough\r\n          </Card.Text>\r\n          </Card.Header>\r\n      </Card>\r\n      \r\n<Table striped bordered hover>\r\n<thead>\r\n  <tr>\r\n    <th>Name</th>\r\n    <th>Address</th>\r\n    <th>Borough</th>\r\n    <th>Cuisine</th>\r\n  </tr>\r\n</thead>\r\n<tbody>\r\n    \r\n</tbody>\r\n</Table>\r\n\r\n<Pagination>\r\n    <Pagination.Prev onClick={previousPage}/>\r\n    <Pagination.Item>{page}</Pagination.Item>\r\n    <Pagination.Next onClick={nextPage} />\r\n</Pagination>\r\n\r\n</div>\r\n        \r\n    )\r\n}\r\n}\r\n\r\nexport default Restaurants;\r\n"]},"metadata":{},"sourceType":"module"}