{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\SEM 5\\\\WEB 422\\\\Assignment 3\\\\my-app\\\\src\\\\Restaurant.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { Card, CardDeck } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Restaurant(props) {\n  _s();\n\n  const [restaurant, setRestaurant] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    fetch(`https://web422ass1.herokuapp.com/api/restaurants/${props.id}`).then(res => res.json()).then(result => {\n      setLoading(false);\n\n      if (result.hasOwnProperty(\"_id\")) {\n        setRestaurant(result);\n      } else {\n        setRestaurant(null);\n      }\n    });\n  }, [props.id]);\n\n  if (loading === true) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Loading Restaurant Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (!restaurant) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Unable to find Restaurant with id: abc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [restaurant.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [restaurant.address.building, \" \", restaurant.address.street]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        style: {\n          \"height\": \"400px\"\n        },\n        center: [restaurant.address.coord[1], restaurant.address.coord[0]],\n        zoom: 13,\n        scrollWheelZoom: false,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [restaurant.address.coord[1], restaurant.address.coord[0]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CardDeck, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Ratings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 6\n          }, this), restaurant.grades.map(grade => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: [\"Grade: \", grade.grade]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 30\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                children: [\"Completed: \", grade.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 2\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 14\n    }, this);\n  }\n}\n\n_s(Restaurant, \"f/OEzMGT6njGZKwZ1cEkZPAOp0k=\");\n\n_c = Restaurant;\nexport default Restaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"sources":["D:/Study/SEM 5/WEB 422/Assignment 3/my-app/src/Restaurant.js"],"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Card","CardDeck","Restaurant","props","restaurant","setRestaurant","loading","setLoading","fetch","id","then","res","json","result","hasOwnProperty","name","address","building","street","coord","grades","map","grade","date"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\r\nimport {Card, CardDeck} from 'react-bootstrap';\r\nfunction Restaurant(props){\r\n    const [restaurant, setRestaurant] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetch(`https://web422ass1.herokuapp.com/api/restaurants/${props.id}`)\r\n        .then(res=>res.json())\r\n        .then(result=>{\r\n            setLoading(false);\r\n            if(result.hasOwnProperty(\"_id\")){\r\n               setRestaurant(result);\r\n            }else{\r\n                setRestaurant(null);\r\n            }\r\n        })\r\n     }, [props.id]);\r\n\r\n    if(loading===true){\r\n        return(\r\n            <Card>\r\n        <Card.Header>\r\n            <Card.Text>\r\n                Loading Restaurant Data...\r\n            </Card.Text>\r\n        </Card.Header>\r\n    </Card>\r\n        )\r\n        \r\n    }\r\n    if(!restaurant){\r\n        return(\r\n            <Card>\r\n        <Card.Header>\r\n            <Card.Text>\r\n               Unable to find Restaurant with id: abc\r\n            </Card.Text>\r\n        </Card.Header>\r\n    </Card>\r\n        )\r\n        \r\n    }\r\n    else{\r\n        return(\r\n             <div>\r\n                 <Card>\r\n                     <Card.Header>\r\n                      <b>{restaurant.name} </b>\r\n                         <Card.Text>\r\n                             {restaurant.address.building} {restaurant.address.street} \r\n                         </Card.Text>\r\n                     </Card.Header>\r\n                 </Card>\r\n                 <br></br>\r\n    \r\n                <MapContainer style={{\"height\": \"400px\"}} center={[restaurant.address.coord[1], restaurant.address.coord[0]]} zoom={13} scrollWheelZoom={false}>\r\n                     <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                     <Marker position={[ restaurant.address.coord[1], restaurant.address.coord[0]]}></Marker>\r\n                 </MapContainer>\r\n    <br></br>\r\n    <br></br>\r\n    <div>\r\n <CardDeck>\r\n     <div>\r\n     <h1>Ratings</h1><hr></hr><br></br>\r\n     </div>\r\n         {restaurant.grades.map((grade)=>{\r\n                 return(\r\n                     <Card>\r\n                         <Card.Body>\r\n                             <Card.Title>Grade: {grade.grade}</Card.Title>\r\n                         </Card.Body>\r\n                         <Card.Footer>\r\n                             Completed: {grade.date}\r\n                         </Card.Footer>\r\n                     </Card>\r\n\r\n                 )\r\n             })}\r\n</CardDeck>\r\n</div>\r\n             </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Restaurant;"]},"metadata":{},"sourceType":"module"}