{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\SEM 5\\\\WEB 422\\\\Assignment 3\\\\my-app\\\\src\\\\Restaurant.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { Card, Table, Pagination } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Restaurant(props) {\n  _s();\n\n  const [restaurant, setRestaurant] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(`https://web422ass1.herokuapp.com/api/restaurants/:id`).then(res => res.json()).then(result => {\n      alert('test');\n      setLoading(false);\n\n      if (result.data.hasOwnProperty(\"_id\")) {\n        setRestaurant(result.data);\n      } else {\n        setRestaurant(null);\n      }\n    });\n  }, [props.id]);\n\n  if (loading === true) {\n    /*#__PURE__*/\n    _jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Loading Restaurant Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this);\n  } else if (!restaurant) {\n    /*#__PURE__*/\n    _jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Unable to find Restaurant with id:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [restaurant.name, /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [restaurant.address.building, \" \", restaurant.address.street]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      style: {\n        \"height\": \"400px\"\n      },\n      center: [restaurant.address.coord[1], restaurant.address.coord[0]],\n      zoom: 13,\n      scrollWheelZoom: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [restaurant.address.coord[1], restaurant.address.coord[0]]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Restaurant, \"f/OEzMGT6njGZKwZ1cEkZPAOp0k=\");\n\n_c = Restaurant;\nexport default Restaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"sources":["D:/Study/SEM 5/WEB 422/Assignment 3/my-app/src/Restaurant.js"],"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Card","Table","Pagination","Restaurant","props","restaurant","setRestaurant","loading","setLoading","fetch","then","res","json","result","alert","data","hasOwnProperty","id","name","address","building","street","coord"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\r\nimport {Card, Table, Pagination} from 'react-bootstrap';\r\nfunction Restaurant(props){\r\n    const [restaurant, setRestaurant] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        \r\n        fetch(`https://web422ass1.herokuapp.com/api/restaurants/:id`)\r\n        .then(res=>res.json())\r\n        .then(result =>{\r\n            alert('test');\r\n            setLoading(false);\r\n            if(result.data.hasOwnProperty(\"_id\")){\r\n               setRestaurant(result.data);\r\n            }else{\r\n                setRestaurant(null);\r\n            }\r\n        })\r\n     }, [props.id]);\r\n\r\n    if(loading===true){\r\n        <Card>\r\n        <Card.Header>\r\n            <Card.Text>\r\n                Loading Restaurant Data...\r\n            </Card.Text>\r\n        </Card.Header>\r\n    </Card>\r\n    }\r\n    else if(!restaurant){\r\n        <Card>\r\n        <Card.Header>\r\n            <Card.Text>\r\n               Unable to find Restaurant with id: \r\n            </Card.Text>\r\n        </Card.Header>\r\n    </Card>\r\n    }\r\n    return(\r\n        <div>\r\n            <Card>\r\n                <Card.Header>\r\n                    {restaurant.name}\r\n                    <Card.Text>\r\n                    {restaurant.address.building} {restaurant.address.street}\r\n                    </Card.Text>\r\n                </Card.Header>\r\n            </Card>\r\n\r\n            <MapContainer style={{\"height\": \"400px\"}} center={[restaurant.address.coord[1], restaurant.address.coord[0]]} zoom={13} scrollWheelZoom={false}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                <Marker position={[ restaurant.address.coord[1], restaurant.address.coord[0]]}></Marker>\r\n            </MapContainer>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Restaurant;"]},"metadata":{},"sourceType":"module"}