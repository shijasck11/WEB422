{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\SEM 5\\\\WEB 422\\\\Assignment 3\\\\my-app\\\\src\\\\Restaurant.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Restaurant(props) {\n  _s();\n\n  const [restaurant, setRestaurant] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    fetch(`api/restaurant/id`);\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Restaurant id: \", props.id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Restaurant, \"f/OEzMGT6njGZKwZ1cEkZPAOp0k=\");\n\n_c = Restaurant;\nexport default Restaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"sources":["D:/Study/SEM 5/WEB 422/Assignment 3/my-app/src/Restaurant.js"],"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Restaurant","props","restaurant","setRestaurant","loading","setLoading","fetch","cleanup","input","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,QAAgD,eAAhD;;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,KAAK,CAAE,mBAAF,CAAL;AACA,WAAO,MAAM;AACTC,MAAAA,OAAO;AACV,KAFD;AAGH,GANQ,EAMN,CAACC,KAAD,CANM,CAAT;AAOA,sBAAO;AAAA,kCAAmBP,KAAK,CAACQ,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAXQT,U;;KAAAA,U;AAaT,eAAeA,UAAf","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\r\nfunction Restaurant(props){\r\n    const [restaurant, setRestaurant] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetch(`api/restaurant/id`)\r\n        return () => {\r\n            cleanup\r\n        };\r\n    }, [input]);\r\n    return <p>Restaurant id: {props.id}</p>\r\n}\r\n\r\nexport default Restaurant;"]},"metadata":{},"sourceType":"module"}