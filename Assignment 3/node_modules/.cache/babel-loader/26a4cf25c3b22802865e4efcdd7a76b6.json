{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\SEM 5\\\\WEB 422\\\\Assignment 3\\\\my-app\\\\src\\\\Restaurant.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { Card, Table, Pagination } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Restaurant(props) {\n  _s();\n\n  const [restaurant, setRestaurant] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    fetch(`https://web422ass1.herokuapp.com/api/restaurants/:id`).then(res => res.json).then(data => {\n      setLoading(false);\n\n      if (data.hasOwnProperty(\"_id\")) {\n        setRestaurant(data);\n      } else {\n        setRestaurant(null);\n      }\n    });\n  }, [props.match.params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [restaurant.name, /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [restaurant.address.building, \" \", restaurant.address.street]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Restaurant, \"f/OEzMGT6njGZKwZ1cEkZPAOp0k=\");\n\n_c = Restaurant;\nexport default Restaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"sources":["D:/Study/SEM 5/WEB 422/Assignment 3/my-app/src/Restaurant.js"],"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Card","Table","Pagination","Restaurant","props","restaurant","setRestaurant","loading","setLoading","fetch","then","res","json","data","hasOwnProperty","match","params","id","name","address","building","street"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,QAAgD,eAAhD;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,UAArB,QAAsC,iBAAtC;;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,KAAK,CAAE,sDAAF,CAAL,CACCC,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IADf,EAECF,IAFD,CAEMG,IAAI,IAAE;AACRL,MAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,UAAGK,IAAI,CAACC,cAAL,CAAoB,KAApB,CAAH,EAA8B;AAC1BR,QAAAA,aAAa,CAACO,IAAD,CAAb;AACH,OAFD,MAEK;AACDP,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,KATD;AAUH,GAZQ,EAYN,CAACF,KAAK,CAACW,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAZM,CAAT;AAaA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,IAAD,CAAM,MAAN;AAAA,mBACKZ,UAAU,CAACa,IADhB,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,qBACCb,UAAU,CAACc,OAAX,CAAmBC,QADpB,OAC+Bf,UAAU,CAACc,OAAX,CAAmBE,MADlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA5BQlB,U;;KAAAA,U;AA8BT,eAAeA,UAAf","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\r\nimport {Card, Table, Pagination} from 'react-bootstrap';\r\nfunction Restaurant(props){\r\n    const [restaurant, setRestaurant] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetch(`https://web422ass1.herokuapp.com/api/restaurants/:id`)\r\n        .then(res=>res.json)\r\n        .then(data=>{\r\n            setLoading(false);\r\n            if(data.hasOwnProperty(\"_id\")){\r\n                setRestaurant(data)\r\n            }else{\r\n                setRestaurant(null);\r\n            }\r\n        })\r\n    }, [props.match.params.id]);\r\n    return(\r\n        <div>\r\n            <Card>\r\n                <Card.Header>\r\n                    {restaurant.name}\r\n                    <Card.Text>\r\n                    {restaurant.address.building} {restaurant.address.street}\r\n                    </Card.Text>\r\n                </Card.Header>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Restaurant;"]},"metadata":{},"sourceType":"module"}